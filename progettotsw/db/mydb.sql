-- MySQL Script generated by MySQL Workbench
-- Thu May  6 19:00:37 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`Cliente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Cliente` (
  `id_Cliente` INT NOT NULL,
  `Cognome` VARCHAR(45) NOT NULL,
  `Nome` VARCHAR(45) NOT NULL,
  `Indirizzo` VARCHAR(100) NOT NULL,
  `N.Carta` INT NOT NULL,
  `Intestatario` VARCHAR(45) NOT NULL,
  `CVV` INT NOT NULL,
  `Ordini Effettuati` VARCHAR(150) NOT NULL,
  PRIMARY KEY (`id_Cliente`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Ordine`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Ordine` (
  `N.Ordine` INT NOT NULL,
  `Stato` VARCHAR(45) NOT NULL,
  `Prezzo` FLOAT NOT NULL,
  `Data` DATE NOT NULL,
  `ID_Cliente` INT NOT NULL,
  `Ordini Effettuati` VARCHAR(150) NOT NULL,
  `Nome` VARCHAR(45) NOT NULL,
  `Cognome` VARCHAR(45) NOT NULL,
  `N.Carta` INT NOT NULL,
  `Intestatario` VARCHAR(45) NOT NULL,
  `CVV` INT NOT NULL,
  `Indirizzo` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`N.Ordine`),
  INDEX `Cliente1_idx` (`ID_Cliente` ASC) VISIBLE,
  CONSTRAINT `Cliente1`
    FOREIGN KEY (`ID_Cliente`)
    REFERENCES `mydb`.`Cliente` (`id_Cliente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`product`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`product` (
  `code` INT NOT NULL,
  `price` INT NOT NULL DEFAULT 0,
  `IVA` INT NOT NULL,
  `quantity` INT NOT NULL,
  `Ricondizionato` VARCHAR(2) NOT NULL,
  `Sconto` INT NULL,
  `name` VARCHAR(45) NOT NULL,
  `description` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`code`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Composizione`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Composizione` (
  `code` INT NOT NULL,
  `N.Ordine` INT NOT NULL,
  `Quantita'` INT NOT NULL,
  `IVA` INT NOT NULL,
  PRIMARY KEY (`code`, `N.Ordine`),
  INDEX `Ordine1_idx` (`N.Ordine` ASC) VISIBLE,
  CONSTRAINT `Prodotto1`
    FOREIGN KEY (`code`)
    REFERENCES `mydb`.`product` (`code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Ordine1`
    FOREIGN KEY (`N.Ordine`)
    REFERENCES `mydb`.`Ordine` (`N.Ordine`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Recensione`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Recensione` (
  `ID_Cliente` INT NOT NULL,
  `ID_Prodotto` INT NOT NULL,
  `Testo_Recensione` VARCHAR(250) NULL,
  `Votazione` INT NOT NULL,
  PRIMARY KEY (`ID_Cliente`, `ID_Prodotto`),
  INDEX `Prodotto2_idx` (`ID_Prodotto` ASC) VISIBLE,
  CONSTRAINT `Prodotto2`
    FOREIGN KEY (`ID_Prodotto`)
    REFERENCES `mydb`.`product` (`code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Ordine2`
    FOREIGN KEY (`ID_Cliente`)
    REFERENCES `mydb`.`Ordine` (`N.Ordine`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
